{"version":3,"sources":["components/Progress.js","components/Number.js","components/ItemDrop.js","components/Step1.js","components/Step2.js","components/Step3.js","components/Step4.js","components/Success.js","components/MultiStepForm.js","App.js","serviceWorker.js","index.js"],"names":["Step","Steps","Progress","current","percent","title","Number","label","onChange","value","className","min","max","defaultValue","Option","Select","ItemDrop","data","pos","style","width","map","index","key","Step1","setForm","form","info","meal","step","numberOfPeople","slice","dishes","type","onClick","message","error","Step2","restaurant","filter","dish","availableMeals","indexOf","Step3","name","onChangeDish","len","length","some","onChangeNoOfServings","e","parseInt","target","dataset","id","data-id","PlusCircleFilled","fontSize","color","margin","cursor","checkEmpty","Step4","Success","status","extra","MultiStepForm","useState","props","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.911691e3.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport { Steps } from 'antd';\n\nconst { Step } = Steps;\n\nconst Progress = ({ current }) => {\n  return (\n    <Steps current={current} percent={0}>\n      <Step title=\"Step 1\" />\n      <Step title=\"Step 2\" />\n      <Step title=\"Step 3\" />\n      <Step title=\"Review\" />\n    </Steps>\n  );\n};\n\nexport default Progress;\n","import React from 'react';\nimport { InputNumber } from 'antd';\n\nconst Number = ({ label, onChange, value }) => (\n  <div className=\"input-number\">\n    <label>{label}</label>\n    <InputNumber\n      min={1}\n      max={10}\n      defaultValue={1}\n      onChange={onChange}\n      value={value}\n    />\n  </div>\n);\n\nexport default Number;\n","import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst ItemDrop = ({ label, data, onChange, defaultValue, pos }) => (\n  <div className=\"input-drop\">\n    <label>{label}</label>\n    <Select\n      defaultValue={defaultValue}\n      onChange={onChange}\n      style={{ width: 200 }}\n    >\n      {data.map((value, index) => (\n        <Option pos={pos} key={index} value={value}>\n          {value}\n        </Option>\n      ))}\n    </Select>\n  </div>\n);\n\nexport default ItemDrop;\n","import React from 'react';\n\nimport { Button, message } from 'antd';\n\nimport Progress from './Progress';\nimport Number from './Number';\nimport ItemDrop from './ItemDrop';\n\nconst Step1 = ({ setForm, form }) => {\n  const next = () => {\n    if (form.info[0].meal === '---') {\n      message.error('You have not chosen a meal!');\n    } else {\n      setForm({\n        step: 1,\n        info: form.info,\n        dishes: form.dishes,\n      });\n    }\n  };\n\n  const onChangeMeal = (value) => {\n    setForm({\n      step: form.step,\n      info: [\n        {\n          meal: value,\n          numberOfPeople: form.info[0].numberOfPeople,\n        },\n        ...form.info.slice(1, 2),\n      ],\n      dishes: [],\n    });\n  };\n\n  const changeNumberOfPeople = (value) => {\n    setForm({\n      step: form.step,\n      info: [\n        {\n          meal: form.info[0].meal,\n          numberOfPeople: value,\n        },\n        ...form.info.slice(1, 2),\n      ],\n      dishes: form.dishes,\n    });\n  };\n\n  return (\n    <>\n      <header>\n        <Progress current={0} />\n      </header>\n      <main>\n        <ItemDrop\n          label=\"Please Select a meal\"\n          data={['breakfast', 'lunch', 'dinner']}\n          defaultValue={form.info[0].meal}\n          onChange={onChangeMeal}\n        />\n        <Number\n          label=\"Please Enter Number of people\"\n          defaultValue={form.info[0].numberOfPeople}\n          onChange={changeNumberOfPeople}\n          value={form.info[0].numberOfPeople}\n        />\n      </main>\n      <footer className=\"footer-step1\">\n        <Button type=\"primary\" onClick={next}>\n          Next\n        </Button>\n      </footer>\n    </>\n  );\n};\n\nexport default Step1;\n","import React from 'react';\n\nimport { Button, message } from 'antd';\n\nimport Progress from './Progress';\nimport ItemDrop from './ItemDrop';\n\nconst Step2 = ({ setForm, data, form }) => {\n  const info = data.filter(\n    (dish) => dish.availableMeals.indexOf(form.info[0].meal) > -1\n  );\n\n  const restaurant = info.map((info) => info.restaurant);\n\n  const onChangeRestaurant = (value) => {\n    setForm({\n      step: form.step,\n      info: [\n        ...form.info.slice(0, 1),\n        {\n          restaurant: value,\n        },\n      ],\n      dishes: [],\n    });\n  };\n\n  const previous = () => {\n    setForm({\n      step: 0,\n      info: form.info,\n      dishes: form.dishes,\n    });\n  };\n\n  const next = () => {\n    if (form.info[1].restaurant === '---') {\n      message.error('You have not chosen a Restaurant!');\n    } else {\n      setForm({\n        step: 2,\n        info: form.info,\n        dishes: form.dishes,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <Progress current={1} />\n      </header>\n      <main>\n        <ItemDrop\n          label=\"Please Select a Restaurant\"\n          data={restaurant}\n          defaultValue={form.info[1].restaurant}\n          onChange={onChangeRestaurant}\n        />\n      </main>\n      <footer className=\"footer-step2\">\n        <Button type=\"primary\" onClick={previous}>\n          Previous\n        </Button>\n        <Button type=\"primary\" onClick={next}>\n          Next\n        </Button>\n      </footer>\n    </>\n  );\n};\n\nexport default Step2;\n","import React from 'react';\n\nimport { Button, message } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n\nimport Progress from './Progress';\nimport ItemDrop from './ItemDrop';\n\nconst Step3 = ({ form, data, setForm }) => {\n  const dishes = data.filter(\n    (dish) =>\n      dish.availableMeals.indexOf(form.info[0].meal) > -1 &&\n      dish.restaurant === form.info[1].restaurant\n  );\n\n  const dish = dishes.map((value) => value.name);\n\n  const onAddDish = () => {\n    const key = form.dishes[form.dishes.length - 1][0];\n    if (form.dishes[key][1] === '---') {\n      message.error('You have not chosen a Dish!');\n    } else if (form.dishes.length > 10 || form.dishes.length >= dish.length) {\n      message.error('The limit of food registration is exceeded!');\n    } else {\n      setForm({\n        step: form.step,\n        info: form.info,\n        dishes: [...form.dishes, [key + 1, '---', 1]],\n      });\n    }\n  };\n\n  const onChangeDish = (value, data) => {\n    const len = form.dishes.length;\n\n    const pos = data.pos;\n\n    if (len !== 0) {\n      const checkDuplicate = form.dishes.some((name) => name[1] === value);\n      if (checkDuplicate === true) {\n        message.error('Cannot choose a dish twice!');\n      } else {\n        setForm({\n          step: form.step,\n          info: form.info,\n          dishes: [\n            ...form.dishes.slice(0, pos),\n            [pos, value, 1],\n            ...form.dishes.slice(pos + 1),\n          ],\n        });\n      }\n    } else {\n      setForm({\n        step: form.step,\n        info: form.info,\n        dishes: [...form.dishes, [0, value, 1]],\n      });\n    }\n  };\n\n  const onChangeNoOfServings = (e) => {\n    const value = parseInt(e.target.value);\n    const key = parseInt(e.target.dataset.id);\n\n    if (value > 10) {\n      message.error('Only choose up to 10 servings!');\n    } else {\n      setForm({\n        step: form.step,\n        info: form.info,\n        dishes: [\n          ...form.dishes.slice(0, key),\n          [key, form.dishes[key][1], value],\n          ...form.dishes.slice(key + 1),\n        ],\n      });\n    }\n  };\n\n  const previous = () => {\n    setForm({\n      step: 1,\n      info: form.info,\n      dishes: form.dishes,\n    });\n  };\n\n  const next = () => {\n    const checkEmpty = form.dishes.some((value) => value[1] === '---');\n    if (form.dishes.length === 0 || checkEmpty === true) {\n      message.error('You have not chosen a Dish!');\n    } else if (form.dishes.length < form.info[0].numberOfPeople) {\n      message.error(\n        'You have not chosen a DishThe total number of dishes must be greater than or equal to the number of people eating!'\n      );\n    } else {\n      setForm({\n        step: 3,\n        info: form.info,\n        dishes: form.dishes,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <Progress current={2} />\n      </header>\n      <main>\n        {form.dishes.length === 0 ? (\n          <div className=\"input-step3\">\n            <ItemDrop\n              label=\"Please Select a Dish\"\n              data={dish}\n              defaultValue=\"---\"\n              onChange={onChangeDish}\n            />\n            <div className=\"input-number\">\n              <label>Please enter no of servings</label>\n              <input\n                type=\"number\"\n                className=\"noOfServings\"\n                min={1}\n                max={10}\n                defaultValue={1}\n              />\n            </div>\n          </div>\n        ) : (\n          <>\n            {form.dishes.map((value, index) => (\n              <div key={index} className=\"input-step3\">\n                <ItemDrop\n                  label=\"Please Select a Dish\"\n                  data={dish}\n                  defaultValue={value[1]}\n                  onChange={onChangeDish}\n                  pos={index}\n                />\n                <div className=\"input-number\">\n                  <label>Please enter no of servings</label>\n                  <input\n                    type=\"number\"\n                    data-id={index}\n                    className=\"noOfServings\"\n                    min={1}\n                    max={10}\n                    defaultValue={form.dishes[index][2]}\n                    onChange={onChangeNoOfServings}\n                  />\n                </div>\n              </div>\n            ))}\n            <PlusCircleFilled\n              style={{\n                fontSize: '2rem',\n                color: '#08c',\n                margin: '0 0 30px 0',\n                cursor: 'pointer',\n              }}\n              onClick={onAddDish}\n            />\n          </>\n        )}\n      </main>\n      <footer className=\"footer-step3\">\n        <Button type=\"primary\" onClick={previous}>\n          Previous\n        </Button>\n        <Button type=\"primary\" onClick={next}>\n          Next\n        </Button>\n      </footer>\n    </>\n  );\n};\n\nexport default Step3;\n","import React from 'react';\n\nimport { Button } from 'antd';\n\nimport Progress from './Progress';\n\nconst Step4 = ({ form, setForm }) => {\n  const previous = () => {\n    setForm({\n      step: 2,\n      info: form.info,\n      dishes: form.dishes,\n    });\n  };\n\n  const next = () => {\n    setForm({\n      step: 4,\n      info: form.info,\n      dishes: form.dishes,\n    });\n  };\n  return (\n    <>\n      <header>\n        <Progress current={3} />\n      </header>\n      <main className=\"main-step4\">\n        <div>\n          <span>Meal</span>\n          <span>{form.info[0].meal}</span>\n        </div>\n        <div>\n          <span>No of People</span>\n          <span>{form.info[0].numberOfPeople}</span>\n        </div>\n        <div>\n          <span>Restaurant</span>\n          <span>{form.info[1].restaurant}</span>\n        </div>\n        <div>\n          <span>Dishes</span>\n          <ul>\n            {form.dishes.map((value, index) => (\n              <li key={index}>{value[1] + ' - ' + value[2]}</li>\n            ))}\n          </ul>\n        </div>\n      </main>\n      <footer className=\"footer-step3\">\n        <Button type=\"primary\" onClick={previous}>\n          Previous\n        </Button>\n        <Button type=\"primary\" onClick={next}>\n          Submit\n        </Button>\n      </footer>\n    </>\n  );\n};\n\nexport default Step4;\n","import React from 'react';\n\nimport { Result, Button } from 'antd';\n\nconst Success = ({ setForm }) => {\n  const buyAgain = () => {\n    setForm({\n      step: 0,\n      info: [\n        {\n          meal: '---',\n          numberOfPeople: 1,\n        },\n        {\n          restaurant: '---',\n        },\n      ],\n      dishes: [],\n    });\n  };\n  return (\n    <>\n      <main>\n        <Result\n          status=\"success\"\n          title=\"Successfully Purchased Dishes!\"\n          extra={[\n            <Button key=\"buy\" onClick={buyAgain}>\n              Buy Again\n            </Button>,\n          ]}\n        />\n      </main>\n    </>\n  );\n};\n\nexport default Success;\n","import React, { useState } from 'react';\n\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Step4 from './Step4';\nimport Success from './Success';\n\nimport dishes from '../data/dishes.json';\n\nconst MultiStepForm = () => {\n  const data = dishes.dishes;\n  const [form, setForm] = useState({\n    step: 0,\n    info: [\n      {\n        meal: '---',\n        numberOfPeople: 1,\n      },\n      {\n        restaurant: '---',\n      },\n    ],\n    dishes: [],\n  });\n\n  const props = { setForm, data, form };\n\n  switch (form.step) {\n    case 0:\n      return <Step1 {...props} />;\n    case 1:\n      return <Step2 {...props} />;\n    case 2:\n      return <Step3 {...props} />;\n    case 3:\n      return <Step4 {...props} />;\n    case 4:\n      return <Success {...props} />;\n    default:\n      return null;\n  }\n};\n\nexport default MultiStepForm;\n","import React from 'react';\nimport './App.css';\nimport MultiStepForm from './components/MultiStepForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MultiStepForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}